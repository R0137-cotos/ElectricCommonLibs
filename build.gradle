buildscript {
    ext {
        springBootVersion = '3.5.0'
    }
    repositories {
        mavenCentral()
        maven {
            url = "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.5")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: "org.sonarqube"
apply plugin: "jacoco"
apply plugin: 'maven-publish'

java {
    toolchain {
         languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
    maven { url = 'https://mygithub.ritscm.xyz/raw/cotos/Dentos_LibsRepo/release/20251023/repository/Dentos_CommonLibs' }
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-data-jpa:3.5.0')
    implementation('org.springframework.boot:spring-boot-starter-security:3.5.0')
    implementation('org.springframework.boot:spring-boot-starter-web:3.5.0')
    implementation('org.springframework.boot:spring-boot-starter-mail:3.5.0')
    implementation group: 'com.github.spullara.mustache.java', name: 'compiler', version: '0.9.14'
    compileOnly('org.projectlombok:lombok:1.18.36')
    annotationProcessor 'org.projectlombok:lombok:1.18.36'
    implementation('org.hibernate:hibernate-validator:8.0.2.Final')
    implementation ('org.hibernate.orm:hibernate-core:6.2.5.Final')
    implementation('com.fasterxml.jackson.dataformat:jackson-dataformat-csv:2.9.6')
    implementation ('org.jxls:jxls:3.0.0')
    implementation ('org.jxls:jxls-poi:3.0.0')
    implementation group: 'org.apache.poi', name : 'poi', version: '3.17'
    implementation('com.auth0:java-jwt:4.5.0')

    implementation('jp.co.ricoh.cotos:dentos-common-libraries:0.0.371')

    implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.8.0'
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.8.0'
    implementation group: 'io.swagger', name: 'swagger-core', version: '1.5.15'
    implementation group: 'commons-beanutils', name: 'commons-beanutils', version: '1.10.1'
    implementation group: 'org.apache.axis', name: 'axis', version: '1.4'
    implementation group: 'javax.xml', name: 'jaxrpc-api', version: '1.1'
    implementation group: 'wsdl4j', name: 'wsdl4j', version: '1.6.3'
    implementation group: 'commons-discovery', name: 'commons-discovery', version: '0.5'
    implementation fileTree(dir: 'libs', include: '*.jar')
    runtimeOnly('org.springframework.boot:spring-boot-devtools:3.5.0')

    testImplementation ('junit:junit:4.13.2')
    testImplementation ('org.jmockit:jmockit:1.49')
    testImplementation('org.dbunit:dbunit:3.0.0')
    testCompileOnly('org.projectlombok:lombok:1.18.36')
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.36'
    testImplementation('org.springframework.boot:spring-boot-starter-test:3.5.0')
    testImplementation('org.springframework.security:spring-security-test:6.4.4')
    testImplementation group: 'com.ninja-squad', name: 'DbSetup', version: '2.1.0'
    testImplementation 'org.apache.commons:commons-lang3:3.17.0'
    testImplementation group: 'commons-io', name: 'commons-io', version: '2.19.0'
    testRuntimeOnly('com.h2database:h2:2.3.232')

    implementation ('log4j:log4j:1.2.17')
    implementation ('net.bytebuddy:byte-buddy:1.17.5')
    implementation ('com.oracle.database.jdbc:ojdbc8:23.7.0.25.01')

    implementation("javax.xml.soap:javax.xml.soap-api:1.4.0")
}

sonarqube {
    properties {
        property "sonar.host.url", "http://sonar.cotos.ricoh.co.jp/"
        property "sonar.jacoco.reportPaths", "${project.buildDir}/jacoco/test.exec"
    }
}

def repo = new File(rootDir, "repository")

publishing {
	publications {
		mavenJava(MavenPublication) {
			version = '0.0.311'
			groupId = 'jp.co.ricoh.cotos'
			artifactId = 'electric-common-libraries'
			from components.java
		}
	}
	repositories {
		maven {
			url = "file://${repo.absolutePath}"
		}
	}
}

java {
	withSourcesJar()
}

test {
	useJUnit()
	forkEvery = 0L
	def heapSize = System.getProperty('test.maxHeapSize') ?: '3G'
	maxHeapSize = heapSize
}
